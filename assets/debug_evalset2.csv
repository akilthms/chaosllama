question,ground_truth_query,issues
What is the total sales amount generated by each employee in the Electronics department?,"WITH filtered_data AS (
  SELECT
    *
  FROM
    `retail_consumer_goods`.`store_ops`.`employee_performance`
  WHERE
    `department` = 'Electronics'
)
SELECT
  `employee_id`,
  `employee_name`,
  SUM(`total_sales_amount`) AS total_sales_amount
FROM
  filtered_data
GROUP BY
  `employee_id`,
  `employee_name`",
Which store has the highest customer satisfaction score?,"WITH filtered_data AS (
  SELECT
    *
  FROM
    `retail_consumer_goods`.`store_ops`.`employee_performance`
  WHERE
    `customer_satisfaction_score` IS NOT NULL
),
grouped_data AS (
  SELECT
    `store_name`,
    AVG(`customer_satisfaction_score`) AS avg_customer_satisfaction_score
  FROM
    filtered_data
  GROUP BY
    `store_name`
)
SELECT
  `store_name`,
  `avg_customer_satisfaction_score`
FROM
  grouped_data
ORDER BY
  `avg_customer_satisfaction_score` DESC
LIMIT 1",
How many tasks were completed by employees in the Customer Service department last month?,"WITH filtered_data AS (
  SELECT
    *
  FROM
    `retail_consumer_goods`.`store_ops`.`employee_tasks`
  WHERE
    `department` = 'Customer Service'
    AND `completed_at` >= DATE_TRUNC('month', CURRENT_DATE - INTERVAL 1 MONTH)
    AND `completed_at` < DATE_TRUNC('month', CURRENT_DATE)
)
SELECT
  COUNT(*) AS total_tasks_completed
FROM
  filtered_data
WHERE
  `task_status` = 'Completed'",
What is the average transaction value for each store?,"WITH filtered_data AS (
  SELECT
    *
  FROM
    `retail_consumer_goods`.`store_ops`.`employee_performance`
  WHERE
    `average_transaction_value` IS NOT NULL
)
SELECT
  `store_name`,
  AVG(`average_transaction_value`) AS avg_transaction_value
FROM
  filtered_data
GROUP BY
  `store_name`",
Who are the top 3 employees with the highest performance ranking in the Downtown Market store?,"WITH filtered_data AS (
  SELECT
    *
  FROM
    `retail_consumer_goods`.`store_ops`.`employee_performance`
  WHERE
    `store_name` = 'Downtown Market'
),
ranked_data AS (
  SELECT
    `employee_id`,
    `employee_name`,
    `performance_ranking_in_store`,
    ROW_NUMBER() OVER (ORDER BY `performance_ranking_in_store` ASC) AS rank
  FROM
    filtered_data
)
SELECT
  `employee_id`,
  `employee_name`,
  `performance_ranking_in_store`
FROM
  ranked_data
WHERE
  rank <= 3
ORDER BY
  rank",